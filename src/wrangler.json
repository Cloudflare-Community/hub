{"anyOf":[{"type":"object","properties":{"define":{"type":"object","additionalProperties":{"type":"string"},"default":{},"description":"A map of values to substitute when deploying your worker.\n\nNOTE: This field is not automatically inherited from the top level environment, and so must be specified in every named environment."},"vars":{"type":"object","additionalProperties":{"anyOf":[{"type":"string"},{}]},"default":{},"description":"A map of environment variables to set when deploying your worker.\n\nNOTE: This field is not automatically inherited from the top level environment, and so must be specified in every named environment."},"durable_objects":{"type":"object","properties":{"bindings":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string","description":"The name of the binding used to refer to the Durable Object."},"class_name":{"type":"string","description":"The exported class name of the Durable Object."},"script_name":{"type":"string","description":"The script where the Durable Object is defined (if it's external to this worker)."},"environment":{"type":"string","description":"The service environment of the script_name to bind to."}},"required":["name","class_name"],"additionalProperties":false}}},"required":["bindings"],"additionalProperties":false,"default":{"bindings":[]},"description":"A list of durable objects that your worker should be bound to.\n\nFor more information about Durable Objects, see the documentation at  https://developers.cloudflare.com/workers/learning/using-durable-objects\n\nNOTE: This field is not automatically inherited from the top level environment,and so must be specified in every named environment."},"kv_namespaces":{"type":"array","items":{"type":"object","properties":{"binding":{"type":"string","description":"The binding name used to refer to the KV Namespace."},"id":{"type":"string","description":"The ID of the KV Namespace."},"preview_id":{"type":"string","description":"The ID of the KV namespace used during `wrangler dev`"}},"required":["binding","id"],"additionalProperties":false},"default":[],"description":"These specify any Workers KV Namespaces you want to access from inside your Worker.\n\nTo learn more about KV Namespaces, see the documentation at https://developers.cloudflare.com/workers/learning/how-kv-works\n\nNOTE: This field is not automatically inherited from the top level environment,and so must be specified in every named environment."},"send_email":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string","description":"The binding name used to refer to the this binding."},"destination_address":{"type":"string","description":"If this binding should be restricted to a specific verified address"},"allowed_destination_addresses":{"type":"array","items":{"type":"string"},"description":"If this binding should be restricted to a specific set of verified addresses"},"queues":{"type":"object","properties":{"producers":{"type":"array","items":{"type":"object","properties":{"binding":{"type":"string","description":"The binding name used to refer to the Queue in the worker."},"queue":{"type":"string","description":"The name of the queue."}},"required":["binding","queue"],"additionalProperties":false},"description":"Producer Bindings"},"consumers":{"type":"array","items":{"type":"object","properties":{"queue":{"type":"string","description":"The name of the queue from which this script should consume."},"max_batch_size":{"type":"number","description":"The maximum number of messages per batch"},"max_batch_timeout":{"type":"number","description":"The maximum number of seconds to wait to fill a batch with messages."},"max_retries":{"type":"number","description":"The maximum number of retries for each message. "},"dead_letter_queue":{"type":"string","description":"The queue to send messages that failed to be consumed."},"max_concurrency":{"type":["number","null"],"description":"The maximum number of concurrent consumer Worker invocations. Leaving this unset will allow your consumer to scale to the maximum concurrency needed to keep up with the message backlog."}},"required":["queue"],"additionalProperties":false},"description":"Consumer configuration"}},"additionalProperties":false,"default":{},"description":"Specifies Queues that are bound to this Worker environment.\n\nNOTE: This field is not automatically inherited from the top level environment,and so must be specified in every named environment."},"r2_buckets":{"type":"array","items":{"type":"object","properties":{"binding":{"type":"string","description":"The binding name used to refer to the R2 bucket in the worker."},"bucket_name":{"type":"string","description":"The name of this R2 bucket at the edge."},"preview_bucket_name":{"type":"string","description":"The preview name of this R2 bucket at the edge."}},"required":["binding","bucket_name"],"additionalProperties":false},"default":[],"description":"Specifies R2 buckets that are bound to this Worker environment.\n\nNOTE: This field is not automatically inherited from the top level environment,and so must be specified in every named environment."},"d1_databases":{"type":"array","items":{"type":"object","properties":{"binding":{"type":"string","description":"The binding name used to refer to the D1 database in the worker."},"database_name":{"type":"string","description":"The name of this D1 database."},"database_id":{"type":"string","description":"The UUID of this D1 database (not required)."},"preview_database_id":{"type":"string","description":"The UUID of this D1 database for Wrangler Dev (if specified)."},"migrations_table":{"type":"string","description":"The name of the migrations table for this D1 database (defaults to 'd1_migrations')."},"migrations_dir":{"type":"string","description":"The path to the directory of migrations for this D1 database (defaults to './migrations')."},"database_internal_env":{"type":"string","description":"Internal use only."}},"required":["binding","database_name","database_id"],"additionalProperties":false},"default":[],"description":"Specifies D1 databases that are bound to this Worker environment.\n\nNOTE: This field is not automatically inherited from the top level environment,and so must be specified in every named environment."},"constellation":{"type":"array","items":{"type":"object","properties":{"binding":{"type":"string","description":"The binding name used to refer to the project in the worker."},"project_id":{"type":"string","description":"The id of the project."}},"required":["binding","project_id"],"additionalProperties":false},"default":[],"description":"Specifies Constellation bindings that are bound to this Worker environment.\n\nNOTE: This field is not automatically inherited from the top level environment,and so must be specified in every named environment."},"services":{"type":"array","items":{"type":"object","properties":{"binding":{"type":"string","description":"The binding name used to refer to the bound service."},"service":{"type":"string","description":"The name of the service."},"environment":{"type":"string","description":"The environment of the service (e.g. production, staging, etc)."}},"required":["binding","service"],"additionalProperties":false},"default":[],"description":"Specifies service bindings (worker-to-worker) that are bound to this Worker environment.\n\nNOTE: This field is not automatically inherited from the top level environment, and so must be specified in every named environment."}},"required":["name"],"additionalProperties":false},"default":[]},"analytics_engine_datasets":{"type":"array","items":{"type":"object","properties":{"binding":{"type":"string","description":"The binding name used to refer to the dataset in the worker."},"dataset":{"type":"string","description":"The name of this dataset to write to."}},"required":["binding"],"additionalProperties":false},"default":[],"description":"Specifies Analytics Engine Datasets that are bound to this Worker environment.\n\nNOTE: This field is not automatically inherited from the top level environment, and so must be specified in every named environment."},"browser":{"type":"object","properties":{"binding":{"type":"string"}},"required":["binding"],"additionalProperties":false,"description":"A browser that will be usable from the worker."},"unsafe":{"type":"object","properties":{"bindings":{"type":"array","items":{"allOf":[{"type":"object","properties":{"name":{"type":"string"},"type":{"type":"string"}},"required":["name","type"]},{"type":"object","additionalProperties":{}}]},"description":"A set of bindings that should be put into a Worker's upload metadata without changes. These can be used to implement bindings for features that haven't released and aren't supporteddirectly by wrangler or miniflare."},"metadata":{"type":"object","additionalProperties":{"type":"string"},"description":"Arbitrary key/value pairs that will be included in the uploaded metadata.  Values specified here will always be applied to metadata last, so can add new or override existing fields."},"capnp":{"anyOf":[{"type":"object","properties":{"base_path":{"type":"string"},"source_schemas":{"type":"array","items":{"type":"string"}},"compiled_schema":{"not":{}}},"required":["base_path","source_schemas"],"additionalProperties":false},{"type":"object","properties":{"base_path":{"not":{}},"source_schemas":{"not":{}},"compiled_schema":{"type":"string"}},"required":["compiled_schema"],"additionalProperties":false}],"description":"Used for internal capnp uploads for the Workers runtime"},"mtls_certificates":{"type":"array","items":{"type":"object","properties":{"binding":{"type":"string","description":"The binding name used to refer to the certificate in the worker."},"certificate_id":{"type":"string","description":"The uuid of the uploaded mTLS certificate"}},"required":["binding","certificate_id"],"additionalProperties":false},"default":[],"description":"Specifies mTLS certificates for this Worker, allowing you to communicate with services that require them."},"tail_consumers":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string","description":"The name of the service tail events will be forwarded to."},"environment":{"type":"string","description":"The environment of the service."}},"required":["name"],"additionalProperties":false},"description":"Allows you to pipe logs from this Worker to another Worker for processing."}},"required":["metadata"],"additionalProperties":false,"description":"\"Unsafe\" tables for features that aren't directly supported by wrangler.\n\nNOTE: This field is not automatically inherited from the top level environment, and so must be specified in every named environment."},"name":{"type":"string","description":"The name of your worker. Alphanumeric + dashes only."},"account_id":{"type":"string","description":"This is the ID of the account associated with your zone.\nYou might have more than one account, so make sure to use the ID of the account associated with the zone/route you provide, if you provide one. It can also be specified through the `CLOUDFLARE_ACCOUNT_ID` environment variable."},"compatibility_date":{"type":"string","pattern":"^\\d{4}\\-(0[1-9]|1[012])\\-(0[1-9]|[12][0-9]|3[01])$","description":"A date in the form yyyy-mm-dd, which will be used to determine which version of the Workers runtime is used. More details at https://developers.cloudflare.com/workers/platform/compatibility-dates"},"compatibility_flags":{"type":"array","items":{"type":"string","enum":["formdata_parser_supports_files","fetch_refuses_unknown_protocols","html_rewriter_treats_esi_include_as_void_tag","durable_object_fetch_requires_full_url","streams_byob_reader_detaches_buffer","streams_enable_constructors","workers_api_getters_setters_on_prototype","minimal_subrequests","no_cots_on_external_fetch","url_standard","global_navigator","capture_async_api_throws","r2_public_beta_bindings","durable_object_alarms","dont_substitute_null_on_type_error","transformstream_enable_standard_constructor","r2_list_honor_include","export_commonjs_default","durable_object_rename","web_socket_compression","nodejs_compat","tcp_sockets_support","response_redirect_url_standard","experimental","durable_object_get_existing","http_headers_getsetcookie","dynamic_dispatch_tunnel_exceptions","service_binding_extra_handlers","no_cf_botmanagement_default","urlsearchparams_delete_has_value_arg","strict_compression_checks","brotli_content_encoding","strict_crypto_checks","rtti_api"]},"description":"A list of flags that enable features from upcoming features of the Workers runtime, usually used together with compatibility_flags. More details at https://developers.cloudflare.com/workers/platform/compatibility-dates"},"main":{"type":"string","description":"The entrypoint/path to the JavaScript file that will be executed."},"base_dir":{"type":"string","description":"The directory in which module rules should be evaluated in a `--no-bundle` worker. This defaults to dirname(main) when left undefined"},"workers_dev":{"type":"boolean","const":false},"tsconfig":{"type":"string","description":"Path to a custom tsconfig."},"jsx_factory":{"type":"string","default":"React.createElement","description":"The function to use to replace jsx syntax"},"jsx_fragment":{"type":"string","default":"React.Fragment","description":"The function to use to replace jsx fragment syntax."},"triggers":{"type":"object","properties":{"crons":{"type":"array","items":{"type":"string"}}},"required":["crons"],"additionalProperties":false,"default":{"crons":[]},"description":"\"Cron\" definitions to trigger a worker's \"scheduled\" function.\n\n Lets you call workers periodically, much like a cron job.\n\nMore details here https://developers.cloudflare.com/workers/platform/cron-triggers"},"usage_module":{"type":"string","enum":["bundled","unbundled"],"description":"Specifies the Usage Model for your Worker. There are two options -\n[bundled](https://developers.cloudflare.com/workers/platform/limits#bundled-usage-model) and\n[unbound](https://developers.cloudflare.com/workers/platform/limits#unbound-usage-model).\nFor newly created Workers, if the Usage Model is omitted it will be set to the [default Usage Model set on the account](https://dash.cloudflare.com/?account=workers/default-usage-model).\nFor existing Workers, if the Usage Model is omitted, it will be\nset to the Usage Model configured in the dashboard for that Worker."},"rules":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["ESModule","CommonJS","CompiledWasm","Text","Data"]},"globs":{"type":"array","items":{"type":"string"}},"falltrhough":{"type":"boolean"}},"required":["type","globs"],"additionalProperties":false},"description":"An ordered list of rules that define which modules to import, and what type to import them as. You will need to specify rules to use Text, Data, and CompiledWasm modules, or when you wish to have a .js file be treated as an ESModule instead of CommonJS."},"build":{"type":"object","properties":{"command":{"type":"string","description":"The command used to build your Worker. On Linux and macOS, the command is executed in the `sh` shell and the `cmd` shell for Windows. The `&&` and `||` shell operators may be used."},"cwd":{"type":"string","description":" The directory in which the command is executed."},"watch_dir":{"anyOf":[{"type":"string"},{"type":"array","items":{"type":"string"}}],"description":"The directory to watch for changes while using wrangler dev, defaults to the current working directory"},"upload":{"type":"object","properties":{"format":{"type":"string","enum":["modules","service-worker"],"description":"The format of the Worker script. This field is deprecated, as we infer the format automatically now."},"dir":{"type":"string","description":"The directory you wish to upload your worker from, relative to the wrangler.toml file.\n\nDefaults to the directory containing the wrangler.toml file."},"main":{"type":"string","description":"The path to the Worker script, relative to `upload.dir`.\n\nThis field is deprecated, as it is pulled from a Command Line Argument, or the top-level `main` field."},"rules":{"type":"array","items":{"$ref":"#/anyOf/0/properties/rules/items"},"description":"This field is deprecated, and is now defined at the top level `rules` field."}},"required":["format"],"additionalProperties":false,"description":"Deprecated field previously used to configure the build and upload of the script."}},"additionalProperties":false,"default":{},"description":"Configures a custom build step to be run by Wrangler when building your Worker.\n\nRefer to the [custom builds documentation](https://developers.cloudflare.com/workers/cli-wrangler/configuration#build) for more details."},"no_bundle":{"type":"boolean","description":"Skip internal build steps and directly deploy script."},"minify":{"type":"boolean","description":"Minify the script before uploading."},"node_compat":{"type":"boolean","description":"Add polyfills for node builtin modules and globals."},"dispatch_namespaces":{"type":"array","items":{"type":"object","properties":{"binding":{"type":"string","description":"The binding name used to refer to the bound service."},"namespace":{"type":"string","description":"The namespace to bind to."},"outbound":{"type":"object","properties":{"service":{"type":"string","description":"Name of the service handling the outbound requests"},"environment":{"type":"string","description":"Name of the environment handling the outbound requests."},"parameters":{"type":"array","items":{"type":"string"},"description":"List of parameter names, for sending context from your dispatch worker to the outbound handler."}},"required":["service","environment"],"additionalProperties":false,"description":"Details about the outbound worker which will handle outbound requests from your namespace."}},"required":["binding","namespace"],"additionalProperties":false},"default":[]},"first_party_worker":{"type":"boolean","description":"Designates this worker as an internal-only \"first-party\" worker."},"zone_id":{"type":"string","description":"The zone ID of the zone you want to deploy to. You can find this in your domain page on the dashboard. This is unnecessary since we can deduce this from routes directly."},"logfwdr":{"type":"object","properties":{"bindings":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string","description":"The binding name used to refer to logfwdr."},"destination":{"type":"string","description":"The destination for this logged message."}},"required":["name","destination"],"additionalProperties":false}}},"required":["bindings"],"additionalProperties":false,"default":{"bindings":[]}},"logpush":{"type":"boolean","description":"Send Trace Events from this worker to Workers Logpush.\n\nThis will not configure a corresponding Logpush job automatically.\n\nFor more information about Workers Logpush, see: https://blog.cloudflare.com/logpush-for-workers/"},"placement":{"type":"object","properties":{"mode":{"type":"string","enum":["off","smart"]}},"required":["mode"],"additionalProperties":false,"description":"Specify how the worker should be located to minimize round-trip time.\n\nMore details: https://developers.cloudflare.com/workers/platform/smart-placement/"},"$schema":{"type":"string","const":"https://cloudflare.community/wrangler.json"},"route":{"anyOf":[{"type":"string"},{"type":"object","properties":{"pattern":{"type":"string"},"zone_id":{"type":"string"},"custom_domain":{"type":"boolean"}},"required":["pattern","zone_id"],"additionalProperties":false},{"type":"object","properties":{"pattern":{"type":"string"},"zone_name":{"type":"string"},"custom_domain":{"type":"boolean"}},"required":["pattern","zone_name"],"additionalProperties":false},{"type":"object","properties":{"pattern":{"type":"string"},"custom_domain":{"type":"boolean"}},"required":["pattern","custom_domain"],"additionalProperties":false}],"description":"A list of routes that your worker should be published to.\n\nOnly one of `routes` or `route` is required.\n\nOnly required when workers_dev is false, and there's no scheduled worker (see `triggers`)"},"kv-namespaces":{"type":"string","description":"* Legacy way of defining KVNamespaces that is no longer supported.\n\nDO NOT USE. This was a legacy bug from Wrangler v1, that we do not want to support."},"experimental_services":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string","description":"The binding name used to refer to the Service."},"service":{"type":"string","description":"The name of the Service being bound."},"environment":{"type":"string","description":"The Service's environment."}},"required":["name","service","environment"],"additionalProperties":false},"default":[],"description":"A list of services that your worker should be bound to.\n\nDO NOT USE. We'd added this to test the new service binding system, but the proper way to test experimental features is to use `unsafe.bindings` configuration."},"configPath":{"type":"string"},"legacy_env":{"type":"boolean","description":"A boolean to enable \"legacy\" style wrangler environments (from Wrangler v1).\nThese have been superseded by Services, but there may be projects that won't (or can't) use them. If you're using a legacy environment, you can set this to `true` to enable it."},"send_metrics":{"type":"boolean","description":"Whether Wrangler should send usage metrics to Cloudflare for this project.\n\nWhen defined this will override any user settings.\nOtherwise, Wrangler will use the user's preference."},"dev":{"type":"object","properties":{"ip":{"type":"string","description":"IP address for the local dev server to listen on, default is `0.0.0.0`."},"port":{"type":"number","default":8787,"description":"Port for the local dev server to listen on."},"inspector_port":{"type":"number","default":9229,"description":"Port for the local dev server's inspector to listen on."},"local_protocol":{"type":"string","enum":["http","https"],"default":"https","description":"Protocol that wrangler dev forwards requests on.\n\nSetting this to `http` is not currently implemented. See https://github.com/cloudflare/workers-sdk/issues/583"},"host":{"type":"string","description":"Host to forward requests to, defaults to the host of the first route of project."}},"additionalProperties":false},"migrations":{"type":"array","items":{"type":"object","properties":{"tag":{"type":"string"},"new_classes":{"type":"array","items":{"type":"string"}},"renamed_classes":{"type":"array","items":{"type":"object","properties":{"from":{"type":"string"},"to":{"type":"string"}},"required":["from","to"],"additionalProperties":false}},"deleted_classes":{"type":"array","items":{"type":"string"}}},"required":["tag"],"additionalProperties":false},"description":"A list of migrations that should be uploaded with your Worker.\n\nThese define changes in your Durable Object declarations.\n\nMore details at https://developers.cloudflare.com/workers/learning/using-durable-objects#configuring-durable-object-classes-with-migrations"},"site":{"type":"object","properties":{"bucket":{"type":"string","description":"The directory containing your static assets.\n\nIt must be a path relative to your wrangler.toml file.\nExample: bucket = \"./public\"\n\nIf there is a `site` field then it must contain this `bucket` field."},"include":{"type":"array","items":{"type":"string"},"description":"An exclusive list of .gitignore-style patterns that match file or directory names from your bucket location. Only matched items will be uploaded. Example: include = [\"upload_dir\"]."},"exclude":{"type":"array","items":{"type":"string"},"description":"A list of .gitignore-style patterns that match files or directories in your bucket that should be excluded from uploads. Example: exclude = [\"ignore_dir\"]"}},"required":["bucket"],"additionalProperties":false,"description":"The definition of a Worker Site, a feature that lets you upload\nstatic assets with your Worker.\n\nMore details at https://developers.cloudflare.com/workers/platform/sites"},"assets":{"type":"object","properties":{"bucket":{"type":"string"},"include":{"type":"array","items":{"type":"string"}},"exclude":{"type":"array","items":{"type":"string"}},"brower_TTL":{"type":"number"},"serve_single_page_app":{"type":"boolean"}},"required":["bucket","include","exclude","serve_single_page_app"],"additionalProperties":false,"description":"Serve a folder of static assets with your Worker, without any additional code. This can either be a string, or an object with additional config fields."},"wasm_modules":{"type":"object","additionalProperties":{"type":"string"},"description":"A list of wasm modules that your worker should be bound to. This is the \"legacy\" way of binding to a wasm module. ES module workers should do proper module imports."},"text_blobs":{"type":"object","additionalProperties":{"type":"string"},"description":"A list of text files that your worker should be bound to. This is the \"legacy\" way of binding to a text file. ES module workers should do proper module imports."},"data_blobs":{"type":"object","additionalProperties":{"type":"string"},"description":"A  list of data files that your worker should be bound to. This is the \"legacy\" way of binding to a data file. ES module workers should do proper module imports."},"keep_vars":{"type":"boolean","description":"By default, wrangler.toml is the source of truth for your environment configuration, like a terraform file.\n\nIf you change your vars in the dashboard, wrangler *will* override/delete them on its next deploy.\n\nIf you want to keep your dashboard vars when wrangler deploys, set this field to true."},"env":{"type":"object","additionalProperties":{"anyOf":[{"type":"object","properties":{"define":{"$ref":"#/anyOf/0/properties/define","description":"A map of values to substitute when deploying your worker.\n\nNOTE: This field is not automatically inherited from the top level environment, and so must be specified in every named environment."},"vars":{"$ref":"#/anyOf/0/properties/vars","description":"A map of environment variables to set when deploying your worker.\n\nNOTE: This field is not automatically inherited from the top level environment, and so must be specified in every named environment."},"durable_objects":{"$ref":"#/anyOf/0/properties/durable_objects","description":"A list of durable objects that your worker should be bound to.\n\nFor more information about Durable Objects, see the documentation at  https://developers.cloudflare.com/workers/learning/using-durable-objects\n\nNOTE: This field is not automatically inherited from the top level environment,and so must be specified in every named environment."},"kv_namespaces":{"$ref":"#/anyOf/0/properties/kv_namespaces","description":"These specify any Workers KV Namespaces you want to access from inside your Worker.\n\nTo learn more about KV Namespaces, see the documentation at https://developers.cloudflare.com/workers/learning/how-kv-works\n\nNOTE: This field is not automatically inherited from the top level environment,and so must be specified in every named environment."},"send_email":{"$ref":"#/anyOf/0/properties/send_email"},"analytics_engine_datasets":{"$ref":"#/anyOf/0/properties/analytics_engine_datasets","description":"Specifies Analytics Engine Datasets that are bound to this Worker environment.\n\nNOTE: This field is not automatically inherited from the top level environment, and so must be specified in every named environment."},"browser":{"$ref":"#/anyOf/0/properties/browser","description":"A browser that will be usable from the worker."},"unsafe":{"$ref":"#/anyOf/0/properties/unsafe","description":"\"Unsafe\" tables for features that aren't directly supported by wrangler.\n\nNOTE: This field is not automatically inherited from the top level environment, and so must be specified in every named environment."},"name":{"$ref":"#/anyOf/0/properties/name","description":"The name of your worker. Alphanumeric + dashes only."},"account_id":{"$ref":"#/anyOf/0/properties/account_id","description":"This is the ID of the account associated with your zone.\nYou might have more than one account, so make sure to use the ID of the account associated with the zone/route you provide, if you provide one. It can also be specified through the `CLOUDFLARE_ACCOUNT_ID` environment variable."},"compatibility_date":{"$ref":"#/anyOf/0/properties/compatibility_date","description":"A date in the form yyyy-mm-dd, which will be used to determine which version of the Workers runtime is used. More details at https://developers.cloudflare.com/workers/platform/compatibility-dates"},"compatibility_flags":{"$ref":"#/anyOf/0/properties/compatibility_flags","description":"A list of flags that enable features from upcoming features of the Workers runtime, usually used together with compatibility_flags. More details at https://developers.cloudflare.com/workers/platform/compatibility-dates"},"main":{"$ref":"#/anyOf/0/properties/main","description":"The entrypoint/path to the JavaScript file that will be executed."},"base_dir":{"$ref":"#/anyOf/0/properties/base_dir","description":"The directory in which module rules should be evaluated in a `--no-bundle` worker. This defaults to dirname(main) when left undefined"},"workers_dev":{"type":"boolean","const":false},"tsconfig":{"$ref":"#/anyOf/0/properties/tsconfig","description":"Path to a custom tsconfig."},"jsx_factory":{"$ref":"#/anyOf/0/properties/jsx_factory","description":"The function to use to replace jsx syntax"},"jsx_fragment":{"$ref":"#/anyOf/0/properties/jsx_fragment","description":"The function to use to replace jsx fragment syntax."},"triggers":{"$ref":"#/anyOf/0/properties/triggers","description":"\"Cron\" definitions to trigger a worker's \"scheduled\" function.\n\n Lets you call workers periodically, much like a cron job.\n\nMore details here https://developers.cloudflare.com/workers/platform/cron-triggers"},"usage_module":{"$ref":"#/anyOf/0/properties/usage_module","description":"Specifies the Usage Model for your Worker. There are two options -\n[bundled](https://developers.cloudflare.com/workers/platform/limits#bundled-usage-model) and\n[unbound](https://developers.cloudflare.com/workers/platform/limits#unbound-usage-model).\nFor newly created Workers, if the Usage Model is omitted it will be set to the [default Usage Model set on the account](https://dash.cloudflare.com/?account=workers/default-usage-model).\nFor existing Workers, if the Usage Model is omitted, it will be\nset to the Usage Model configured in the dashboard for that Worker."},"rules":{"$ref":"#/anyOf/0/properties/rules","description":"An ordered list of rules that define which modules to import, and what type to import them as. You will need to specify rules to use Text, Data, and CompiledWasm modules, or when you wish to have a .js file be treated as an ESModule instead of CommonJS."},"build":{"$ref":"#/anyOf/0/properties/build","description":"Configures a custom build step to be run by Wrangler when building your Worker.\n\nRefer to the [custom builds documentation](https://developers.cloudflare.com/workers/cli-wrangler/configuration#build) for more details."},"no_bundle":{"$ref":"#/anyOf/0/properties/no_bundle","description":"Skip internal build steps and directly deploy script."},"minify":{"$ref":"#/anyOf/0/properties/minify","description":"Minify the script before uploading."},"node_compat":{"$ref":"#/anyOf/0/properties/node_compat","description":"Add polyfills for node builtin modules and globals."},"dispatch_namespaces":{"$ref":"#/anyOf/0/properties/dispatch_namespaces"},"first_party_worker":{"$ref":"#/anyOf/0/properties/first_party_worker","description":"Designates this worker as an internal-only \"first-party\" worker."},"zone_id":{"$ref":"#/anyOf/0/properties/zone_id","description":"The zone ID of the zone you want to deploy to. You can find this in your domain page on the dashboard. This is unnecessary since we can deduce this from routes directly."},"logfwdr":{"$ref":"#/anyOf/0/properties/logfwdr"},"logpush":{"$ref":"#/anyOf/0/properties/logpush","description":"Send Trace Events from this worker to Workers Logpush.\n\nThis will not configure a corresponding Logpush job automatically.\n\nFor more information about Workers Logpush, see: https://blog.cloudflare.com/logpush-for-workers/"},"placement":{"$ref":"#/anyOf/0/properties/placement","description":"Specify how the worker should be located to minimize round-trip time.\n\nMore details: https://developers.cloudflare.com/workers/platform/smart-placement/"},"route":{"$ref":"#/anyOf/0/properties/route","description":"A list of routes that your worker should be published to.\n\nOnly one of `routes` or `route` is required.\n\nOnly required when workers_dev is false, and there's no scheduled worker (see `triggers`)"},"kv-namespaces":{"$ref":"#/anyOf/0/properties/kv-namespaces","description":"* Legacy way of defining KVNamespaces that is no longer supported.\n\nDO NOT USE. This was a legacy bug from Wrangler v1, that we do not want to support."},"experimental_services":{"$ref":"#/anyOf/0/properties/experimental_services","description":"A list of services that your worker should be bound to.\n\nDO NOT USE. We'd added this to test the new service binding system, but the proper way to test experimental features is to use `unsafe.bindings` configuration."}},"additionalProperties":false},{"type":"object","properties":{"define":{"$ref":"#/anyOf/0/properties/define","description":"A map of values to substitute when deploying your worker.\n\nNOTE: This field is not automatically inherited from the top level environment, and so must be specified in every named environment."},"vars":{"$ref":"#/anyOf/0/properties/vars","description":"A map of environment variables to set when deploying your worker.\n\nNOTE: This field is not automatically inherited from the top level environment, and so must be specified in every named environment."},"durable_objects":{"$ref":"#/anyOf/0/properties/durable_objects","description":"A list of durable objects that your worker should be bound to.\n\nFor more information about Durable Objects, see the documentation at  https://developers.cloudflare.com/workers/learning/using-durable-objects\n\nNOTE: This field is not automatically inherited from the top level environment,and so must be specified in every named environment."},"kv_namespaces":{"$ref":"#/anyOf/0/properties/kv_namespaces","description":"These specify any Workers KV Namespaces you want to access from inside your Worker.\n\nTo learn more about KV Namespaces, see the documentation at https://developers.cloudflare.com/workers/learning/how-kv-works\n\nNOTE: This field is not automatically inherited from the top level environment,and so must be specified in every named environment."},"send_email":{"$ref":"#/anyOf/0/properties/send_email"},"analytics_engine_datasets":{"$ref":"#/anyOf/0/properties/analytics_engine_datasets","description":"Specifies Analytics Engine Datasets that are bound to this Worker environment.\n\nNOTE: This field is not automatically inherited from the top level environment, and so must be specified in every named environment."},"browser":{"$ref":"#/anyOf/0/properties/browser","description":"A browser that will be usable from the worker."},"unsafe":{"$ref":"#/anyOf/0/properties/unsafe","description":"\"Unsafe\" tables for features that aren't directly supported by wrangler.\n\nNOTE: This field is not automatically inherited from the top level environment, and so must be specified in every named environment."},"name":{"$ref":"#/anyOf/0/properties/name","description":"The name of your worker. Alphanumeric + dashes only."},"account_id":{"$ref":"#/anyOf/0/properties/account_id","description":"This is the ID of the account associated with your zone.\nYou might have more than one account, so make sure to use the ID of the account associated with the zone/route you provide, if you provide one. It can also be specified through the `CLOUDFLARE_ACCOUNT_ID` environment variable."},"compatibility_date":{"$ref":"#/anyOf/0/properties/compatibility_date","description":"A date in the form yyyy-mm-dd, which will be used to determine which version of the Workers runtime is used. More details at https://developers.cloudflare.com/workers/platform/compatibility-dates"},"compatibility_flags":{"$ref":"#/anyOf/0/properties/compatibility_flags","description":"A list of flags that enable features from upcoming features of the Workers runtime, usually used together with compatibility_flags. More details at https://developers.cloudflare.com/workers/platform/compatibility-dates"},"main":{"$ref":"#/anyOf/0/properties/main","description":"The entrypoint/path to the JavaScript file that will be executed."},"base_dir":{"$ref":"#/anyOf/0/properties/base_dir","description":"The directory in which module rules should be evaluated in a `--no-bundle` worker. This defaults to dirname(main) when left undefined"},"workers_dev":{"type":"boolean","const":true},"tsconfig":{"$ref":"#/anyOf/0/properties/tsconfig","description":"Path to a custom tsconfig."},"jsx_factory":{"$ref":"#/anyOf/0/properties/jsx_factory","description":"The function to use to replace jsx syntax"},"jsx_fragment":{"$ref":"#/anyOf/0/properties/jsx_fragment","description":"The function to use to replace jsx fragment syntax."},"triggers":{"$ref":"#/anyOf/0/properties/triggers","description":"\"Cron\" definitions to trigger a worker's \"scheduled\" function.\n\n Lets you call workers periodically, much like a cron job.\n\nMore details here https://developers.cloudflare.com/workers/platform/cron-triggers"},"usage_module":{"$ref":"#/anyOf/0/properties/usage_module","description":"Specifies the Usage Model for your Worker. There are two options -\n[bundled](https://developers.cloudflare.com/workers/platform/limits#bundled-usage-model) and\n[unbound](https://developers.cloudflare.com/workers/platform/limits#unbound-usage-model).\nFor newly created Workers, if the Usage Model is omitted it will be set to the [default Usage Model set on the account](https://dash.cloudflare.com/?account=workers/default-usage-model).\nFor existing Workers, if the Usage Model is omitted, it will be\nset to the Usage Model configured in the dashboard for that Worker."},"rules":{"$ref":"#/anyOf/0/properties/rules","description":"An ordered list of rules that define which modules to import, and what type to import them as. You will need to specify rules to use Text, Data, and CompiledWasm modules, or when you wish to have a .js file be treated as an ESModule instead of CommonJS."},"build":{"$ref":"#/anyOf/0/properties/build","description":"Configures a custom build step to be run by Wrangler when building your Worker.\n\nRefer to the [custom builds documentation](https://developers.cloudflare.com/workers/cli-wrangler/configuration#build) for more details."},"no_bundle":{"$ref":"#/anyOf/0/properties/no_bundle","description":"Skip internal build steps and directly deploy script."},"minify":{"$ref":"#/anyOf/0/properties/minify","description":"Minify the script before uploading."},"node_compat":{"$ref":"#/anyOf/0/properties/node_compat","description":"Add polyfills for node builtin modules and globals."},"dispatch_namespaces":{"$ref":"#/anyOf/0/properties/dispatch_namespaces"},"first_party_worker":{"$ref":"#/anyOf/0/properties/first_party_worker","description":"Designates this worker as an internal-only \"first-party\" worker."},"zone_id":{"$ref":"#/anyOf/0/properties/zone_id","description":"The zone ID of the zone you want to deploy to. You can find this in your domain page on the dashboard. This is unnecessary since we can deduce this from routes directly."},"logfwdr":{"$ref":"#/anyOf/0/properties/logfwdr"},"logpush":{"$ref":"#/anyOf/0/properties/logpush","description":"Send Trace Events from this worker to Workers Logpush.\n\nThis will not configure a corresponding Logpush job automatically.\n\nFor more information about Workers Logpush, see: https://blog.cloudflare.com/logpush-for-workers/"},"placement":{"$ref":"#/anyOf/0/properties/placement","description":"Specify how the worker should be located to minimize round-trip time.\n\nMore details: https://developers.cloudflare.com/workers/platform/smart-placement/"},"route":{"$ref":"#/anyOf/0/properties/route","description":"A list of routes that your worker should be published to.\n\nOnly one of `routes` or `route` is required.\n\nOnly required when workers_dev is false, and there's no scheduled worker (see `triggers`)"},"kv-namespaces":{"$ref":"#/anyOf/0/properties/kv-namespaces","description":"* Legacy way of defining KVNamespaces that is no longer supported.\n\nDO NOT USE. This was a legacy bug from Wrangler v1, that we do not want to support."},"experimental_services":{"$ref":"#/anyOf/0/properties/experimental_services","description":"A list of services that your worker should be bound to.\n\nDO NOT USE. We'd added this to test the new service binding system, but the proper way to test experimental features is to use `unsafe.bindings` configuration."}},"additionalProperties":false},{"type":"object","properties":{"define":{"$ref":"#/anyOf/0/properties/define","description":"A map of values to substitute when deploying your worker.\n\nNOTE: This field is not automatically inherited from the top level environment, and so must be specified in every named environment."},"vars":{"$ref":"#/anyOf/0/properties/vars","description":"A map of environment variables to set when deploying your worker.\n\nNOTE: This field is not automatically inherited from the top level environment, and so must be specified in every named environment."},"durable_objects":{"$ref":"#/anyOf/0/properties/durable_objects","description":"A list of durable objects that your worker should be bound to.\n\nFor more information about Durable Objects, see the documentation at  https://developers.cloudflare.com/workers/learning/using-durable-objects\n\nNOTE: This field is not automatically inherited from the top level environment,and so must be specified in every named environment."},"kv_namespaces":{"$ref":"#/anyOf/0/properties/kv_namespaces","description":"These specify any Workers KV Namespaces you want to access from inside your Worker.\n\nTo learn more about KV Namespaces, see the documentation at https://developers.cloudflare.com/workers/learning/how-kv-works\n\nNOTE: This field is not automatically inherited from the top level environment,and so must be specified in every named environment."},"send_email":{"$ref":"#/anyOf/0/properties/send_email"},"analytics_engine_datasets":{"$ref":"#/anyOf/0/properties/analytics_engine_datasets","description":"Specifies Analytics Engine Datasets that are bound to this Worker environment.\n\nNOTE: This field is not automatically inherited from the top level environment, and so must be specified in every named environment."},"browser":{"$ref":"#/anyOf/0/properties/browser","description":"A browser that will be usable from the worker."},"unsafe":{"$ref":"#/anyOf/0/properties/unsafe","description":"\"Unsafe\" tables for features that aren't directly supported by wrangler.\n\nNOTE: This field is not automatically inherited from the top level environment, and so must be specified in every named environment."},"name":{"$ref":"#/anyOf/0/properties/name","description":"The name of your worker. Alphanumeric + dashes only."},"account_id":{"$ref":"#/anyOf/0/properties/account_id","description":"This is the ID of the account associated with your zone.\nYou might have more than one account, so make sure to use the ID of the account associated with the zone/route you provide, if you provide one. It can also be specified through the `CLOUDFLARE_ACCOUNT_ID` environment variable."},"compatibility_date":{"$ref":"#/anyOf/0/properties/compatibility_date","description":"A date in the form yyyy-mm-dd, which will be used to determine which version of the Workers runtime is used. More details at https://developers.cloudflare.com/workers/platform/compatibility-dates"},"compatibility_flags":{"$ref":"#/anyOf/0/properties/compatibility_flags","description":"A list of flags that enable features from upcoming features of the Workers runtime, usually used together with compatibility_flags. More details at https://developers.cloudflare.com/workers/platform/compatibility-dates"},"main":{"$ref":"#/anyOf/0/properties/main","description":"The entrypoint/path to the JavaScript file that will be executed."},"base_dir":{"$ref":"#/anyOf/0/properties/base_dir","description":"The directory in which module rules should be evaluated in a `--no-bundle` worker. This defaults to dirname(main) when left undefined"},"workers_dev":{"type":"boolean","const":false},"tsconfig":{"$ref":"#/anyOf/0/properties/tsconfig","description":"Path to a custom tsconfig."},"jsx_factory":{"$ref":"#/anyOf/0/properties/jsx_factory","description":"The function to use to replace jsx syntax"},"jsx_fragment":{"$ref":"#/anyOf/0/properties/jsx_fragment","description":"The function to use to replace jsx fragment syntax."},"triggers":{"$ref":"#/anyOf/0/properties/triggers","description":"\"Cron\" definitions to trigger a worker's \"scheduled\" function.\n\n Lets you call workers periodically, much like a cron job.\n\nMore details here https://developers.cloudflare.com/workers/platform/cron-triggers"},"usage_module":{"$ref":"#/anyOf/0/properties/usage_module","description":"Specifies the Usage Model for your Worker. There are two options -\n[bundled](https://developers.cloudflare.com/workers/platform/limits#bundled-usage-model) and\n[unbound](https://developers.cloudflare.com/workers/platform/limits#unbound-usage-model).\nFor newly created Workers, if the Usage Model is omitted it will be set to the [default Usage Model set on the account](https://dash.cloudflare.com/?account=workers/default-usage-model).\nFor existing Workers, if the Usage Model is omitted, it will be\nset to the Usage Model configured in the dashboard for that Worker."},"rules":{"$ref":"#/anyOf/0/properties/rules","description":"An ordered list of rules that define which modules to import, and what type to import them as. You will need to specify rules to use Text, Data, and CompiledWasm modules, or when you wish to have a .js file be treated as an ESModule instead of CommonJS."},"build":{"$ref":"#/anyOf/0/properties/build","description":"Configures a custom build step to be run by Wrangler when building your Worker.\n\nRefer to the [custom builds documentation](https://developers.cloudflare.com/workers/cli-wrangler/configuration#build) for more details."},"no_bundle":{"$ref":"#/anyOf/0/properties/no_bundle","description":"Skip internal build steps and directly deploy script."},"minify":{"$ref":"#/anyOf/0/properties/minify","description":"Minify the script before uploading."},"node_compat":{"$ref":"#/anyOf/0/properties/node_compat","description":"Add polyfills for node builtin modules and globals."},"dispatch_namespaces":{"$ref":"#/anyOf/0/properties/dispatch_namespaces"},"first_party_worker":{"$ref":"#/anyOf/0/properties/first_party_worker","description":"Designates this worker as an internal-only \"first-party\" worker."},"zone_id":{"$ref":"#/anyOf/0/properties/zone_id","description":"The zone ID of the zone you want to deploy to. You can find this in your domain page on the dashboard. This is unnecessary since we can deduce this from routes directly."},"logfwdr":{"$ref":"#/anyOf/0/properties/logfwdr"},"logpush":{"$ref":"#/anyOf/0/properties/logpush","description":"Send Trace Events from this worker to Workers Logpush.\n\nThis will not configure a corresponding Logpush job automatically.\n\nFor more information about Workers Logpush, see: https://blog.cloudflare.com/logpush-for-workers/"},"placement":{"$ref":"#/anyOf/0/properties/placement","description":"Specify how the worker should be located to minimize round-trip time.\n\nMore details: https://developers.cloudflare.com/workers/platform/smart-placement/"},"route":{"type":"array","items":{"anyOf":[{"$ref":"#/anyOf/0/properties/route/anyOf/0"},{"$ref":"#/anyOf/0/properties/route/anyOf/1"},{"$ref":"#/anyOf/0/properties/route/anyOf/2"},{"$ref":"#/anyOf/0/properties/route/anyOf/3"}]},"description":"A list of routes that your worker should be published to.\nOnly one of `routes` or `route` is required.\n\nOnly required when workers_dev is false, and there's no scheduled worker (see `triggers`)"},"kv-namespaces":{"$ref":"#/anyOf/0/properties/kv-namespaces","description":"* Legacy way of defining KVNamespaces that is no longer supported.\n\nDO NOT USE. This was a legacy bug from Wrangler v1, that we do not want to support."},"experimental_services":{"$ref":"#/anyOf/0/properties/experimental_services","description":"A list of services that your worker should be bound to.\n\nDO NOT USE. We'd added this to test the new service binding system, but the proper way to test experimental features is to use `unsafe.bindings` configuration."}},"additionalProperties":false},{"type":"object","properties":{"define":{"$ref":"#/anyOf/0/properties/define","description":"A map of values to substitute when deploying your worker.\n\nNOTE: This field is not automatically inherited from the top level environment, and so must be specified in every named environment."},"vars":{"$ref":"#/anyOf/0/properties/vars","description":"A map of environment variables to set when deploying your worker.\n\nNOTE: This field is not automatically inherited from the top level environment, and so must be specified in every named environment."},"durable_objects":{"$ref":"#/anyOf/0/properties/durable_objects","description":"A list of durable objects that your worker should be bound to.\n\nFor more information about Durable Objects, see the documentation at  https://developers.cloudflare.com/workers/learning/using-durable-objects\n\nNOTE: This field is not automatically inherited from the top level environment,and so must be specified in every named environment."},"kv_namespaces":{"$ref":"#/anyOf/0/properties/kv_namespaces","description":"These specify any Workers KV Namespaces you want to access from inside your Worker.\n\nTo learn more about KV Namespaces, see the documentation at https://developers.cloudflare.com/workers/learning/how-kv-works\n\nNOTE: This field is not automatically inherited from the top level environment,and so must be specified in every named environment."},"send_email":{"$ref":"#/anyOf/0/properties/send_email"},"analytics_engine_datasets":{"$ref":"#/anyOf/0/properties/analytics_engine_datasets","description":"Specifies Analytics Engine Datasets that are bound to this Worker environment.\n\nNOTE: This field is not automatically inherited from the top level environment, and so must be specified in every named environment."},"browser":{"$ref":"#/anyOf/0/properties/browser","description":"A browser that will be usable from the worker."},"unsafe":{"$ref":"#/anyOf/0/properties/unsafe","description":"\"Unsafe\" tables for features that aren't directly supported by wrangler.\n\nNOTE: This field is not automatically inherited from the top level environment, and so must be specified in every named environment."},"name":{"$ref":"#/anyOf/0/properties/name","description":"The name of your worker. Alphanumeric + dashes only."},"account_id":{"$ref":"#/anyOf/0/properties/account_id","description":"This is the ID of the account associated with your zone.\nYou might have more than one account, so make sure to use the ID of the account associated with the zone/route you provide, if you provide one. It can also be specified through the `CLOUDFLARE_ACCOUNT_ID` environment variable."},"compatibility_date":{"$ref":"#/anyOf/0/properties/compatibility_date","description":"A date in the form yyyy-mm-dd, which will be used to determine which version of the Workers runtime is used. More details at https://developers.cloudflare.com/workers/platform/compatibility-dates"},"compatibility_flags":{"$ref":"#/anyOf/0/properties/compatibility_flags","description":"A list of flags that enable features from upcoming features of the Workers runtime, usually used together with compatibility_flags. More details at https://developers.cloudflare.com/workers/platform/compatibility-dates"},"main":{"$ref":"#/anyOf/0/properties/main","description":"The entrypoint/path to the JavaScript file that will be executed."},"base_dir":{"$ref":"#/anyOf/0/properties/base_dir","description":"The directory in which module rules should be evaluated in a `--no-bundle` worker. This defaults to dirname(main) when left undefined"},"workers_dev":{"type":"boolean","const":true},"tsconfig":{"$ref":"#/anyOf/0/properties/tsconfig","description":"Path to a custom tsconfig."},"jsx_factory":{"$ref":"#/anyOf/0/properties/jsx_factory","description":"The function to use to replace jsx syntax"},"jsx_fragment":{"$ref":"#/anyOf/0/properties/jsx_fragment","description":"The function to use to replace jsx fragment syntax."},"triggers":{"$ref":"#/anyOf/0/properties/triggers","description":"\"Cron\" definitions to trigger a worker's \"scheduled\" function.\n\n Lets you call workers periodically, much like a cron job.\n\nMore details here https://developers.cloudflare.com/workers/platform/cron-triggers"},"usage_module":{"$ref":"#/anyOf/0/properties/usage_module","description":"Specifies the Usage Model for your Worker. There are two options -\n[bundled](https://developers.cloudflare.com/workers/platform/limits#bundled-usage-model) and\n[unbound](https://developers.cloudflare.com/workers/platform/limits#unbound-usage-model).\nFor newly created Workers, if the Usage Model is omitted it will be set to the [default Usage Model set on the account](https://dash.cloudflare.com/?account=workers/default-usage-model).\nFor existing Workers, if the Usage Model is omitted, it will be\nset to the Usage Model configured in the dashboard for that Worker."},"rules":{"$ref":"#/anyOf/0/properties/rules","description":"An ordered list of rules that define which modules to import, and what type to import them as. You will need to specify rules to use Text, Data, and CompiledWasm modules, or when you wish to have a .js file be treated as an ESModule instead of CommonJS."},"build":{"$ref":"#/anyOf/0/properties/build","description":"Configures a custom build step to be run by Wrangler when building your Worker.\n\nRefer to the [custom builds documentation](https://developers.cloudflare.com/workers/cli-wrangler/configuration#build) for more details."},"no_bundle":{"$ref":"#/anyOf/0/properties/no_bundle","description":"Skip internal build steps and directly deploy script."},"minify":{"$ref":"#/anyOf/0/properties/minify","description":"Minify the script before uploading."},"node_compat":{"$ref":"#/anyOf/0/properties/node_compat","description":"Add polyfills for node builtin modules and globals."},"dispatch_namespaces":{"$ref":"#/anyOf/0/properties/dispatch_namespaces"},"first_party_worker":{"$ref":"#/anyOf/0/properties/first_party_worker","description":"Designates this worker as an internal-only \"first-party\" worker."},"zone_id":{"$ref":"#/anyOf/0/properties/zone_id","description":"The zone ID of the zone you want to deploy to. You can find this in your domain page on the dashboard. This is unnecessary since we can deduce this from routes directly."},"logfwdr":{"$ref":"#/anyOf/0/properties/logfwdr"},"logpush":{"$ref":"#/anyOf/0/properties/logpush","description":"Send Trace Events from this worker to Workers Logpush.\n\nThis will not configure a corresponding Logpush job automatically.\n\nFor more information about Workers Logpush, see: https://blog.cloudflare.com/logpush-for-workers/"},"placement":{"$ref":"#/anyOf/0/properties/placement","description":"Specify how the worker should be located to minimize round-trip time.\n\nMore details: https://developers.cloudflare.com/workers/platform/smart-placement/"},"route":{"$ref":"#/anyOf/0/properties/env/additionalProperties/anyOf/2/properties/route","description":"A list of routes that your worker should be published to.\nOnly one of `routes` or `route` is required.\n\nOnly required when workers_dev is false, and there's no scheduled worker (see `triggers`)"},"kv-namespaces":{"$ref":"#/anyOf/0/properties/kv-namespaces","description":"* Legacy way of defining KVNamespaces that is no longer supported.\n\nDO NOT USE. This was a legacy bug from Wrangler v1, that we do not want to support."},"experimental_services":{"$ref":"#/anyOf/0/properties/experimental_services","description":"A list of services that your worker should be bound to.\n\nDO NOT USE. We'd added this to test the new service binding system, but the proper way to test experimental features is to use `unsafe.bindings` configuration."}},"additionalProperties":false}]}},"type":{"type":"string","enum":["webpack","javascript","rust"],"description":"The project \"type\".\nA holdover from Wrangler v1.x. Valid values were \"webpack\", \"javascript\", and \"rust\". THIS FEATURE IS DEPRECATED, DO NOT USE THIS. Most common features now work out of the box with wrangler, including modules, jsx, typescript, etc. If you need anything more, use a custom build."},"webpack_config":{"type":"string","description":"Path to the webpack config to use when building your worker.\nA holdover from Wrangler v1.x, used with `type: \"webpack\"`.\n\nTHIS FEATURE IS DEPRECATED, DO NOT USE THIS. Most common features now work out of the box with wrangler, including modules, jsx, typescript, etc. If you need anything more, use a custom build."},"miniflare":{"description":"Configuration only used by a standalone use of the miniflare binary. This feature is deprecated as of Miniflare v3, as Miniflare no longer exposes a CLI."}},"additionalProperties":false},{"type":"object","properties":{"define":{"$ref":"#/anyOf/0/properties/define","description":"A map of values to substitute when deploying your worker.\n\nNOTE: This field is not automatically inherited from the top level environment, and so must be specified in every named environment."},"vars":{"$ref":"#/anyOf/0/properties/vars","description":"A map of environment variables to set when deploying your worker.\n\nNOTE: This field is not automatically inherited from the top level environment, and so must be specified in every named environment."},"durable_objects":{"$ref":"#/anyOf/0/properties/durable_objects","description":"A list of durable objects that your worker should be bound to.\n\nFor more information about Durable Objects, see the documentation at  https://developers.cloudflare.com/workers/learning/using-durable-objects\n\nNOTE: This field is not automatically inherited from the top level environment,and so must be specified in every named environment."},"kv_namespaces":{"$ref":"#/anyOf/0/properties/kv_namespaces","description":"These specify any Workers KV Namespaces you want to access from inside your Worker.\n\nTo learn more about KV Namespaces, see the documentation at https://developers.cloudflare.com/workers/learning/how-kv-works\n\nNOTE: This field is not automatically inherited from the top level environment,and so must be specified in every named environment."},"send_email":{"$ref":"#/anyOf/0/properties/send_email"},"analytics_engine_datasets":{"$ref":"#/anyOf/0/properties/analytics_engine_datasets","description":"Specifies Analytics Engine Datasets that are bound to this Worker environment.\n\nNOTE: This field is not automatically inherited from the top level environment, and so must be specified in every named environment."},"browser":{"$ref":"#/anyOf/0/properties/browser","description":"A browser that will be usable from the worker."},"unsafe":{"$ref":"#/anyOf/0/properties/unsafe","description":"\"Unsafe\" tables for features that aren't directly supported by wrangler.\n\nNOTE: This field is not automatically inherited from the top level environment, and so must be specified in every named environment."},"name":{"$ref":"#/anyOf/0/properties/name","description":"The name of your worker. Alphanumeric + dashes only."},"account_id":{"$ref":"#/anyOf/0/properties/account_id","description":"This is the ID of the account associated with your zone.\nYou might have more than one account, so make sure to use the ID of the account associated with the zone/route you provide, if you provide one. It can also be specified through the `CLOUDFLARE_ACCOUNT_ID` environment variable."},"compatibility_date":{"$ref":"#/anyOf/0/properties/compatibility_date","description":"A date in the form yyyy-mm-dd, which will be used to determine which version of the Workers runtime is used. More details at https://developers.cloudflare.com/workers/platform/compatibility-dates"},"compatibility_flags":{"$ref":"#/anyOf/0/properties/compatibility_flags","description":"A list of flags that enable features from upcoming features of the Workers runtime, usually used together with compatibility_flags. More details at https://developers.cloudflare.com/workers/platform/compatibility-dates"},"main":{"$ref":"#/anyOf/0/properties/main","description":"The entrypoint/path to the JavaScript file that will be executed."},"base_dir":{"$ref":"#/anyOf/0/properties/base_dir","description":"The directory in which module rules should be evaluated in a `--no-bundle` worker. This defaults to dirname(main) when left undefined"},"workers_dev":{"type":"boolean","const":true},"tsconfig":{"$ref":"#/anyOf/0/properties/tsconfig","description":"Path to a custom tsconfig."},"jsx_factory":{"$ref":"#/anyOf/0/properties/jsx_factory","description":"The function to use to replace jsx syntax"},"jsx_fragment":{"$ref":"#/anyOf/0/properties/jsx_fragment","description":"The function to use to replace jsx fragment syntax."},"triggers":{"$ref":"#/anyOf/0/properties/triggers","description":"\"Cron\" definitions to trigger a worker's \"scheduled\" function.\n\n Lets you call workers periodically, much like a cron job.\n\nMore details here https://developers.cloudflare.com/workers/platform/cron-triggers"},"usage_module":{"$ref":"#/anyOf/0/properties/usage_module","description":"Specifies the Usage Model for your Worker. There are two options -\n[bundled](https://developers.cloudflare.com/workers/platform/limits#bundled-usage-model) and\n[unbound](https://developers.cloudflare.com/workers/platform/limits#unbound-usage-model).\nFor newly created Workers, if the Usage Model is omitted it will be set to the [default Usage Model set on the account](https://dash.cloudflare.com/?account=workers/default-usage-model).\nFor existing Workers, if the Usage Model is omitted, it will be\nset to the Usage Model configured in the dashboard for that Worker."},"rules":{"$ref":"#/anyOf/0/properties/rules","description":"An ordered list of rules that define which modules to import, and what type to import them as. You will need to specify rules to use Text, Data, and CompiledWasm modules, or when you wish to have a .js file be treated as an ESModule instead of CommonJS."},"build":{"$ref":"#/anyOf/0/properties/build","description":"Configures a custom build step to be run by Wrangler when building your Worker.\n\nRefer to the [custom builds documentation](https://developers.cloudflare.com/workers/cli-wrangler/configuration#build) for more details."},"no_bundle":{"$ref":"#/anyOf/0/properties/no_bundle","description":"Skip internal build steps and directly deploy script."},"minify":{"$ref":"#/anyOf/0/properties/minify","description":"Minify the script before uploading."},"node_compat":{"$ref":"#/anyOf/0/properties/node_compat","description":"Add polyfills for node builtin modules and globals."},"dispatch_namespaces":{"$ref":"#/anyOf/0/properties/dispatch_namespaces"},"first_party_worker":{"$ref":"#/anyOf/0/properties/first_party_worker","description":"Designates this worker as an internal-only \"first-party\" worker."},"zone_id":{"$ref":"#/anyOf/0/properties/zone_id","description":"The zone ID of the zone you want to deploy to. You can find this in your domain page on the dashboard. This is unnecessary since we can deduce this from routes directly."},"logfwdr":{"$ref":"#/anyOf/0/properties/logfwdr"},"logpush":{"$ref":"#/anyOf/0/properties/logpush","description":"Send Trace Events from this worker to Workers Logpush.\n\nThis will not configure a corresponding Logpush job automatically.\n\nFor more information about Workers Logpush, see: https://blog.cloudflare.com/logpush-for-workers/"},"placement":{"$ref":"#/anyOf/0/properties/placement","description":"Specify how the worker should be located to minimize round-trip time.\n\nMore details: https://developers.cloudflare.com/workers/platform/smart-placement/"},"$schema":{"type":"string","const":"https://cloudflare.community/wrangler.json"},"route":{"$ref":"#/anyOf/0/properties/route","description":"A list of routes that your worker should be published to.\n\nOnly one of `routes` or `route` is required.\n\nOnly required when workers_dev is false, and there's no scheduled worker (see `triggers`)"},"kv-namespaces":{"$ref":"#/anyOf/0/properties/kv-namespaces","description":"* Legacy way of defining KVNamespaces that is no longer supported.\n\nDO NOT USE. This was a legacy bug from Wrangler v1, that we do not want to support."},"experimental_services":{"$ref":"#/anyOf/0/properties/experimental_services","description":"A list of services that your worker should be bound to.\n\nDO NOT USE. We'd added this to test the new service binding system, but the proper way to test experimental features is to use `unsafe.bindings` configuration."},"configPath":{"$ref":"#/anyOf/0/properties/configPath"},"legacy_env":{"$ref":"#/anyOf/0/properties/legacy_env","description":"A boolean to enable \"legacy\" style wrangler environments (from Wrangler v1).\nThese have been superseded by Services, but there may be projects that won't (or can't) use them. If you're using a legacy environment, you can set this to `true` to enable it."},"send_metrics":{"$ref":"#/anyOf/0/properties/send_metrics","description":"Whether Wrangler should send usage metrics to Cloudflare for this project.\n\nWhen defined this will override any user settings.\nOtherwise, Wrangler will use the user's preference."},"dev":{"$ref":"#/anyOf/0/properties/dev"},"migrations":{"$ref":"#/anyOf/0/properties/migrations","description":"A list of migrations that should be uploaded with your Worker.\n\nThese define changes in your Durable Object declarations.\n\nMore details at https://developers.cloudflare.com/workers/learning/using-durable-objects#configuring-durable-object-classes-with-migrations"},"site":{"$ref":"#/anyOf/0/properties/site","description":"The definition of a Worker Site, a feature that lets you upload\nstatic assets with your Worker.\n\nMore details at https://developers.cloudflare.com/workers/platform/sites"},"assets":{"$ref":"#/anyOf/0/properties/assets","description":"Serve a folder of static assets with your Worker, without any additional code. This can either be a string, or an object with additional config fields."},"wasm_modules":{"$ref":"#/anyOf/0/properties/wasm_modules","description":"A list of wasm modules that your worker should be bound to. This is the \"legacy\" way of binding to a wasm module. ES module workers should do proper module imports."},"text_blobs":{"$ref":"#/anyOf/0/properties/text_blobs","description":"A list of text files that your worker should be bound to. This is the \"legacy\" way of binding to a text file. ES module workers should do proper module imports."},"data_blobs":{"$ref":"#/anyOf/0/properties/data_blobs","description":"A  list of data files that your worker should be bound to. This is the \"legacy\" way of binding to a data file. ES module workers should do proper module imports."},"keep_vars":{"$ref":"#/anyOf/0/properties/keep_vars","description":"By default, wrangler.toml is the source of truth for your environment configuration, like a terraform file.\n\nIf you change your vars in the dashboard, wrangler *will* override/delete them on its next deploy.\n\nIf you want to keep your dashboard vars when wrangler deploys, set this field to true."},"env":{"$ref":"#/anyOf/0/properties/env"},"type":{"$ref":"#/anyOf/0/properties/type","description":"The project \"type\".\nA holdover from Wrangler v1.x. Valid values were \"webpack\", \"javascript\", and \"rust\". THIS FEATURE IS DEPRECATED, DO NOT USE THIS. Most common features now work out of the box with wrangler, including modules, jsx, typescript, etc. If you need anything more, use a custom build."},"webpack_config":{"$ref":"#/anyOf/0/properties/webpack_config","description":"Path to the webpack config to use when building your worker.\nA holdover from Wrangler v1.x, used with `type: \"webpack\"`.\n\nTHIS FEATURE IS DEPRECATED, DO NOT USE THIS. Most common features now work out of the box with wrangler, including modules, jsx, typescript, etc. If you need anything more, use a custom build."},"miniflare":{"$ref":"#/anyOf/0/properties/miniflare","description":"Configuration only used by a standalone use of the miniflare binary. This feature is deprecated as of Miniflare v3, as Miniflare no longer exposes a CLI."}},"additionalProperties":false},{"type":"object","properties":{"define":{"$ref":"#/anyOf/0/properties/define","description":"A map of values to substitute when deploying your worker.\n\nNOTE: This field is not automatically inherited from the top level environment, and so must be specified in every named environment."},"vars":{"$ref":"#/anyOf/0/properties/vars","description":"A map of environment variables to set when deploying your worker.\n\nNOTE: This field is not automatically inherited from the top level environment, and so must be specified in every named environment."},"durable_objects":{"$ref":"#/anyOf/0/properties/durable_objects","description":"A list of durable objects that your worker should be bound to.\n\nFor more information about Durable Objects, see the documentation at  https://developers.cloudflare.com/workers/learning/using-durable-objects\n\nNOTE: This field is not automatically inherited from the top level environment,and so must be specified in every named environment."},"kv_namespaces":{"$ref":"#/anyOf/0/properties/kv_namespaces","description":"These specify any Workers KV Namespaces you want to access from inside your Worker.\n\nTo learn more about KV Namespaces, see the documentation at https://developers.cloudflare.com/workers/learning/how-kv-works\n\nNOTE: This field is not automatically inherited from the top level environment,and so must be specified in every named environment."},"send_email":{"$ref":"#/anyOf/0/properties/send_email"},"analytics_engine_datasets":{"$ref":"#/anyOf/0/properties/analytics_engine_datasets","description":"Specifies Analytics Engine Datasets that are bound to this Worker environment.\n\nNOTE: This field is not automatically inherited from the top level environment, and so must be specified in every named environment."},"browser":{"$ref":"#/anyOf/0/properties/browser","description":"A browser that will be usable from the worker."},"unsafe":{"$ref":"#/anyOf/0/properties/unsafe","description":"\"Unsafe\" tables for features that aren't directly supported by wrangler.\n\nNOTE: This field is not automatically inherited from the top level environment, and so must be specified in every named environment."},"name":{"$ref":"#/anyOf/0/properties/name","description":"The name of your worker. Alphanumeric + dashes only."},"account_id":{"$ref":"#/anyOf/0/properties/account_id","description":"This is the ID of the account associated with your zone.\nYou might have more than one account, so make sure to use the ID of the account associated with the zone/route you provide, if you provide one. It can also be specified through the `CLOUDFLARE_ACCOUNT_ID` environment variable."},"compatibility_date":{"$ref":"#/anyOf/0/properties/compatibility_date","description":"A date in the form yyyy-mm-dd, which will be used to determine which version of the Workers runtime is used. More details at https://developers.cloudflare.com/workers/platform/compatibility-dates"},"compatibility_flags":{"$ref":"#/anyOf/0/properties/compatibility_flags","description":"A list of flags that enable features from upcoming features of the Workers runtime, usually used together with compatibility_flags. More details at https://developers.cloudflare.com/workers/platform/compatibility-dates"},"main":{"$ref":"#/anyOf/0/properties/main","description":"The entrypoint/path to the JavaScript file that will be executed."},"base_dir":{"$ref":"#/anyOf/0/properties/base_dir","description":"The directory in which module rules should be evaluated in a `--no-bundle` worker. This defaults to dirname(main) when left undefined"},"workers_dev":{"type":"boolean","const":false},"tsconfig":{"$ref":"#/anyOf/0/properties/tsconfig","description":"Path to a custom tsconfig."},"jsx_factory":{"$ref":"#/anyOf/0/properties/jsx_factory","description":"The function to use to replace jsx syntax"},"jsx_fragment":{"$ref":"#/anyOf/0/properties/jsx_fragment","description":"The function to use to replace jsx fragment syntax."},"triggers":{"$ref":"#/anyOf/0/properties/triggers","description":"\"Cron\" definitions to trigger a worker's \"scheduled\" function.\n\n Lets you call workers periodically, much like a cron job.\n\nMore details here https://developers.cloudflare.com/workers/platform/cron-triggers"},"usage_module":{"$ref":"#/anyOf/0/properties/usage_module","description":"Specifies the Usage Model for your Worker. There are two options -\n[bundled](https://developers.cloudflare.com/workers/platform/limits#bundled-usage-model) and\n[unbound](https://developers.cloudflare.com/workers/platform/limits#unbound-usage-model).\nFor newly created Workers, if the Usage Model is omitted it will be set to the [default Usage Model set on the account](https://dash.cloudflare.com/?account=workers/default-usage-model).\nFor existing Workers, if the Usage Model is omitted, it will be\nset to the Usage Model configured in the dashboard for that Worker."},"rules":{"$ref":"#/anyOf/0/properties/rules","description":"An ordered list of rules that define which modules to import, and what type to import them as. You will need to specify rules to use Text, Data, and CompiledWasm modules, or when you wish to have a .js file be treated as an ESModule instead of CommonJS."},"build":{"$ref":"#/anyOf/0/properties/build","description":"Configures a custom build step to be run by Wrangler when building your Worker.\n\nRefer to the [custom builds documentation](https://developers.cloudflare.com/workers/cli-wrangler/configuration#build) for more details."},"no_bundle":{"$ref":"#/anyOf/0/properties/no_bundle","description":"Skip internal build steps and directly deploy script."},"minify":{"$ref":"#/anyOf/0/properties/minify","description":"Minify the script before uploading."},"node_compat":{"$ref":"#/anyOf/0/properties/node_compat","description":"Add polyfills for node builtin modules and globals."},"dispatch_namespaces":{"$ref":"#/anyOf/0/properties/dispatch_namespaces"},"first_party_worker":{"$ref":"#/anyOf/0/properties/first_party_worker","description":"Designates this worker as an internal-only \"first-party\" worker."},"zone_id":{"$ref":"#/anyOf/0/properties/zone_id","description":"The zone ID of the zone you want to deploy to. You can find this in your domain page on the dashboard. This is unnecessary since we can deduce this from routes directly."},"logfwdr":{"$ref":"#/anyOf/0/properties/logfwdr"},"logpush":{"$ref":"#/anyOf/0/properties/logpush","description":"Send Trace Events from this worker to Workers Logpush.\n\nThis will not configure a corresponding Logpush job automatically.\n\nFor more information about Workers Logpush, see: https://blog.cloudflare.com/logpush-for-workers/"},"placement":{"$ref":"#/anyOf/0/properties/placement","description":"Specify how the worker should be located to minimize round-trip time.\n\nMore details: https://developers.cloudflare.com/workers/platform/smart-placement/"},"$schema":{"type":"string","const":"https://cloudflare.community/wrangler.json"},"route":{"$ref":"#/anyOf/0/properties/env/additionalProperties/anyOf/2/properties/route","description":"A list of routes that your worker should be published to.\nOnly one of `routes` or `route` is required.\n\nOnly required when workers_dev is false, and there's no scheduled worker (see `triggers`)"},"kv-namespaces":{"$ref":"#/anyOf/0/properties/kv-namespaces","description":"* Legacy way of defining KVNamespaces that is no longer supported.\n\nDO NOT USE. This was a legacy bug from Wrangler v1, that we do not want to support."},"experimental_services":{"$ref":"#/anyOf/0/properties/experimental_services","description":"A list of services that your worker should be bound to.\n\nDO NOT USE. We'd added this to test the new service binding system, but the proper way to test experimental features is to use `unsafe.bindings` configuration."},"configPath":{"$ref":"#/anyOf/0/properties/configPath"},"legacy_env":{"$ref":"#/anyOf/0/properties/legacy_env","description":"A boolean to enable \"legacy\" style wrangler environments (from Wrangler v1).\nThese have been superseded by Services, but there may be projects that won't (or can't) use them. If you're using a legacy environment, you can set this to `true` to enable it."},"send_metrics":{"$ref":"#/anyOf/0/properties/send_metrics","description":"Whether Wrangler should send usage metrics to Cloudflare for this project.\n\nWhen defined this will override any user settings.\nOtherwise, Wrangler will use the user's preference."},"dev":{"$ref":"#/anyOf/0/properties/dev"},"migrations":{"$ref":"#/anyOf/0/properties/migrations","description":"A list of migrations that should be uploaded with your Worker.\n\nThese define changes in your Durable Object declarations.\n\nMore details at https://developers.cloudflare.com/workers/learning/using-durable-objects#configuring-durable-object-classes-with-migrations"},"site":{"$ref":"#/anyOf/0/properties/site","description":"The definition of a Worker Site, a feature that lets you upload\nstatic assets with your Worker.\n\nMore details at https://developers.cloudflare.com/workers/platform/sites"},"assets":{"$ref":"#/anyOf/0/properties/assets","description":"Serve a folder of static assets with your Worker, without any additional code. This can either be a string, or an object with additional config fields."},"wasm_modules":{"$ref":"#/anyOf/0/properties/wasm_modules","description":"A list of wasm modules that your worker should be bound to. This is the \"legacy\" way of binding to a wasm module. ES module workers should do proper module imports."},"text_blobs":{"$ref":"#/anyOf/0/properties/text_blobs","description":"A list of text files that your worker should be bound to. This is the \"legacy\" way of binding to a text file. ES module workers should do proper module imports."},"data_blobs":{"$ref":"#/anyOf/0/properties/data_blobs","description":"A  list of data files that your worker should be bound to. This is the \"legacy\" way of binding to a data file. ES module workers should do proper module imports."},"keep_vars":{"$ref":"#/anyOf/0/properties/keep_vars","description":"By default, wrangler.toml is the source of truth for your environment configuration, like a terraform file.\n\nIf you change your vars in the dashboard, wrangler *will* override/delete them on its next deploy.\n\nIf you want to keep your dashboard vars when wrangler deploys, set this field to true."},"env":{"$ref":"#/anyOf/0/properties/env"},"type":{"$ref":"#/anyOf/0/properties/type","description":"The project \"type\".\nA holdover from Wrangler v1.x. Valid values were \"webpack\", \"javascript\", and \"rust\". THIS FEATURE IS DEPRECATED, DO NOT USE THIS. Most common features now work out of the box with wrangler, including modules, jsx, typescript, etc. If you need anything more, use a custom build."},"webpack_config":{"$ref":"#/anyOf/0/properties/webpack_config","description":"Path to the webpack config to use when building your worker.\nA holdover from Wrangler v1.x, used with `type: \"webpack\"`.\n\nTHIS FEATURE IS DEPRECATED, DO NOT USE THIS. Most common features now work out of the box with wrangler, including modules, jsx, typescript, etc. If you need anything more, use a custom build."},"miniflare":{"$ref":"#/anyOf/0/properties/miniflare","description":"Configuration only used by a standalone use of the miniflare binary. This feature is deprecated as of Miniflare v3, as Miniflare no longer exposes a CLI."}},"additionalProperties":false},{"type":"object","properties":{"define":{"$ref":"#/anyOf/0/properties/define","description":"A map of values to substitute when deploying your worker.\n\nNOTE: This field is not automatically inherited from the top level environment, and so must be specified in every named environment."},"vars":{"$ref":"#/anyOf/0/properties/vars","description":"A map of environment variables to set when deploying your worker.\n\nNOTE: This field is not automatically inherited from the top level environment, and so must be specified in every named environment."},"durable_objects":{"$ref":"#/anyOf/0/properties/durable_objects","description":"A list of durable objects that your worker should be bound to.\n\nFor more information about Durable Objects, see the documentation at  https://developers.cloudflare.com/workers/learning/using-durable-objects\n\nNOTE: This field is not automatically inherited from the top level environment,and so must be specified in every named environment."},"kv_namespaces":{"$ref":"#/anyOf/0/properties/kv_namespaces","description":"These specify any Workers KV Namespaces you want to access from inside your Worker.\n\nTo learn more about KV Namespaces, see the documentation at https://developers.cloudflare.com/workers/learning/how-kv-works\n\nNOTE: This field is not automatically inherited from the top level environment,and so must be specified in every named environment."},"send_email":{"$ref":"#/anyOf/0/properties/send_email"},"analytics_engine_datasets":{"$ref":"#/anyOf/0/properties/analytics_engine_datasets","description":"Specifies Analytics Engine Datasets that are bound to this Worker environment.\n\nNOTE: This field is not automatically inherited from the top level environment, and so must be specified in every named environment."},"browser":{"$ref":"#/anyOf/0/properties/browser","description":"A browser that will be usable from the worker."},"unsafe":{"$ref":"#/anyOf/0/properties/unsafe","description":"\"Unsafe\" tables for features that aren't directly supported by wrangler.\n\nNOTE: This field is not automatically inherited from the top level environment, and so must be specified in every named environment."},"name":{"$ref":"#/anyOf/0/properties/name","description":"The name of your worker. Alphanumeric + dashes only."},"account_id":{"$ref":"#/anyOf/0/properties/account_id","description":"This is the ID of the account associated with your zone.\nYou might have more than one account, so make sure to use the ID of the account associated with the zone/route you provide, if you provide one. It can also be specified through the `CLOUDFLARE_ACCOUNT_ID` environment variable."},"compatibility_date":{"$ref":"#/anyOf/0/properties/compatibility_date","description":"A date in the form yyyy-mm-dd, which will be used to determine which version of the Workers runtime is used. More details at https://developers.cloudflare.com/workers/platform/compatibility-dates"},"compatibility_flags":{"$ref":"#/anyOf/0/properties/compatibility_flags","description":"A list of flags that enable features from upcoming features of the Workers runtime, usually used together with compatibility_flags. More details at https://developers.cloudflare.com/workers/platform/compatibility-dates"},"main":{"$ref":"#/anyOf/0/properties/main","description":"The entrypoint/path to the JavaScript file that will be executed."},"base_dir":{"$ref":"#/anyOf/0/properties/base_dir","description":"The directory in which module rules should be evaluated in a `--no-bundle` worker. This defaults to dirname(main) when left undefined"},"workers_dev":{"type":"boolean","const":true},"tsconfig":{"$ref":"#/anyOf/0/properties/tsconfig","description":"Path to a custom tsconfig."},"jsx_factory":{"$ref":"#/anyOf/0/properties/jsx_factory","description":"The function to use to replace jsx syntax"},"jsx_fragment":{"$ref":"#/anyOf/0/properties/jsx_fragment","description":"The function to use to replace jsx fragment syntax."},"triggers":{"$ref":"#/anyOf/0/properties/triggers","description":"\"Cron\" definitions to trigger a worker's \"scheduled\" function.\n\n Lets you call workers periodically, much like a cron job.\n\nMore details here https://developers.cloudflare.com/workers/platform/cron-triggers"},"usage_module":{"$ref":"#/anyOf/0/properties/usage_module","description":"Specifies the Usage Model for your Worker. There are two options -\n[bundled](https://developers.cloudflare.com/workers/platform/limits#bundled-usage-model) and\n[unbound](https://developers.cloudflare.com/workers/platform/limits#unbound-usage-model).\nFor newly created Workers, if the Usage Model is omitted it will be set to the [default Usage Model set on the account](https://dash.cloudflare.com/?account=workers/default-usage-model).\nFor existing Workers, if the Usage Model is omitted, it will be\nset to the Usage Model configured in the dashboard for that Worker."},"rules":{"$ref":"#/anyOf/0/properties/rules","description":"An ordered list of rules that define which modules to import, and what type to import them as. You will need to specify rules to use Text, Data, and CompiledWasm modules, or when you wish to have a .js file be treated as an ESModule instead of CommonJS."},"build":{"$ref":"#/anyOf/0/properties/build","description":"Configures a custom build step to be run by Wrangler when building your Worker.\n\nRefer to the [custom builds documentation](https://developers.cloudflare.com/workers/cli-wrangler/configuration#build) for more details."},"no_bundle":{"$ref":"#/anyOf/0/properties/no_bundle","description":"Skip internal build steps and directly deploy script."},"minify":{"$ref":"#/anyOf/0/properties/minify","description":"Minify the script before uploading."},"node_compat":{"$ref":"#/anyOf/0/properties/node_compat","description":"Add polyfills for node builtin modules and globals."},"dispatch_namespaces":{"$ref":"#/anyOf/0/properties/dispatch_namespaces"},"first_party_worker":{"$ref":"#/anyOf/0/properties/first_party_worker","description":"Designates this worker as an internal-only \"first-party\" worker."},"zone_id":{"$ref":"#/anyOf/0/properties/zone_id","description":"The zone ID of the zone you want to deploy to. You can find this in your domain page on the dashboard. This is unnecessary since we can deduce this from routes directly."},"logfwdr":{"$ref":"#/anyOf/0/properties/logfwdr"},"logpush":{"$ref":"#/anyOf/0/properties/logpush","description":"Send Trace Events from this worker to Workers Logpush.\n\nThis will not configure a corresponding Logpush job automatically.\n\nFor more information about Workers Logpush, see: https://blog.cloudflare.com/logpush-for-workers/"},"placement":{"$ref":"#/anyOf/0/properties/placement","description":"Specify how the worker should be located to minimize round-trip time.\n\nMore details: https://developers.cloudflare.com/workers/platform/smart-placement/"},"$schema":{"type":"string","const":"https://cloudflare.community/wrangler.json"},"route":{"$ref":"#/anyOf/0/properties/env/additionalProperties/anyOf/2/properties/route","description":"A list of routes that your worker should be published to.\nOnly one of `routes` or `route` is required.\n\nOnly required when workers_dev is false, and there's no scheduled worker (see `triggers`)"},"kv-namespaces":{"$ref":"#/anyOf/0/properties/kv-namespaces","description":"* Legacy way of defining KVNamespaces that is no longer supported.\n\nDO NOT USE. This was a legacy bug from Wrangler v1, that we do not want to support."},"experimental_services":{"$ref":"#/anyOf/0/properties/experimental_services","description":"A list of services that your worker should be bound to.\n\nDO NOT USE. We'd added this to test the new service binding system, but the proper way to test experimental features is to use `unsafe.bindings` configuration."},"configPath":{"$ref":"#/anyOf/0/properties/configPath"},"legacy_env":{"$ref":"#/anyOf/0/properties/legacy_env","description":"A boolean to enable \"legacy\" style wrangler environments (from Wrangler v1).\nThese have been superseded by Services, but there may be projects that won't (or can't) use them. If you're using a legacy environment, you can set this to `true` to enable it."},"send_metrics":{"$ref":"#/anyOf/0/properties/send_metrics","description":"Whether Wrangler should send usage metrics to Cloudflare for this project.\n\nWhen defined this will override any user settings.\nOtherwise, Wrangler will use the user's preference."},"dev":{"$ref":"#/anyOf/0/properties/dev"},"migrations":{"$ref":"#/anyOf/0/properties/migrations","description":"A list of migrations that should be uploaded with your Worker.\n\nThese define changes in your Durable Object declarations.\n\nMore details at https://developers.cloudflare.com/workers/learning/using-durable-objects#configuring-durable-object-classes-with-migrations"},"site":{"$ref":"#/anyOf/0/properties/site","description":"The definition of a Worker Site, a feature that lets you upload\nstatic assets with your Worker.\n\nMore details at https://developers.cloudflare.com/workers/platform/sites"},"assets":{"$ref":"#/anyOf/0/properties/assets","description":"Serve a folder of static assets with your Worker, without any additional code. This can either be a string, or an object with additional config fields."},"wasm_modules":{"$ref":"#/anyOf/0/properties/wasm_modules","description":"A list of wasm modules that your worker should be bound to. This is the \"legacy\" way of binding to a wasm module. ES module workers should do proper module imports."},"text_blobs":{"$ref":"#/anyOf/0/properties/text_blobs","description":"A list of text files that your worker should be bound to. This is the \"legacy\" way of binding to a text file. ES module workers should do proper module imports."},"data_blobs":{"$ref":"#/anyOf/0/properties/data_blobs","description":"A  list of data files that your worker should be bound to. This is the \"legacy\" way of binding to a data file. ES module workers should do proper module imports."},"keep_vars":{"$ref":"#/anyOf/0/properties/keep_vars","description":"By default, wrangler.toml is the source of truth for your environment configuration, like a terraform file.\n\nIf you change your vars in the dashboard, wrangler *will* override/delete them on its next deploy.\n\nIf you want to keep your dashboard vars when wrangler deploys, set this field to true."},"env":{"$ref":"#/anyOf/0/properties/env"},"type":{"$ref":"#/anyOf/0/properties/type","description":"The project \"type\".\nA holdover from Wrangler v1.x. Valid values were \"webpack\", \"javascript\", and \"rust\". THIS FEATURE IS DEPRECATED, DO NOT USE THIS. Most common features now work out of the box with wrangler, including modules, jsx, typescript, etc. If you need anything more, use a custom build."},"webpack_config":{"$ref":"#/anyOf/0/properties/webpack_config","description":"Path to the webpack config to use when building your worker.\nA holdover from Wrangler v1.x, used with `type: \"webpack\"`.\n\nTHIS FEATURE IS DEPRECATED, DO NOT USE THIS. Most common features now work out of the box with wrangler, including modules, jsx, typescript, etc. If you need anything more, use a custom build."},"miniflare":{"$ref":"#/anyOf/0/properties/miniflare","description":"Configuration only used by a standalone use of the miniflare binary. This feature is deprecated as of Miniflare v3, as Miniflare no longer exposes a CLI."}},"additionalProperties":false}],"$schema":"http://json-schema.org/draft-07/schema#"}